name: Deploy â€“ Staging

on:
  push:
    branches: ["staging"]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run in dry-run mode'
        required: false
        default: false
        type: boolean

jobs:
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies & build
        run: |
          npm ci
          npm run build
      
      - name: Deploy to STAGING
        uses: ./
        with:
          mode: staging
          store: ${{ vars.SHOPIFY_STORE }}
          branch_staging: staging
          build_enabled: true
          build_node_version: '20.x'
          build_package_manager: npm
          build_command: 'npm ci && npm run build'
          json_pull_globs: |
            templates/*.json
            locales/*.json
            config/settings_data.json
          dry_run: ${{ github.event.inputs.dry_run }}
        env:
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          STAGING_THEME_ID: ${{ secrets.STAGING_THEME_ID }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
      - name: Comment on PR (if exists)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const output = {
              themeId: '${{ steps.deploy.outputs.theme_id }}',
              previewUrl: '${{ steps.deploy.outputs.preview_url }}',
              editorUrl: '${{ steps.deploy.outputs.editor_url }}'
            };
            
            const comment = `## ðŸš€ Staging Deployment Complete
            
            **Preview**: ${output.previewUrl}
            **Editor**: ${output.editorUrl}
            **Theme ID**: ${output.themeId}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

