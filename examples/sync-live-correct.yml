# CORRECT Live Theme Sync Configuration
# This example shows the CORRECT way to sync from live theme
# DO NOT add custom shell scripts to manage branches - the action handles everything

name: Sync Live Theme - Correct Setup

on:
  # Run every hour
  schedule:
    - cron: '0 * * * *'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Perform dry run only'
        type: boolean
        default: false

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      # IMPORTANT: Do NOT add custom scripts here to manage branches
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      # Step 2: Run the sync action
      # The action handles ALL branch management internally
      - name: Sync from Live Theme
        id: sync
        uses: ShopLab-Team/shopify-theme-deployment-manager@v1
        with:
          mode: sync-live
          
          # The action will automatically:
          # 1. Check if remote_changes branch exists
          # 2. Create it if needed or checkout if it exists
          # 3. Pull theme files from live
          # 4. Commit changes
          # 5. Create/update PR
          
          # Optional: Customize branch name (default: remote_changes)
          sync_branch: remote_changes
          
          # Optional: Target branch for PR (default: staging)
          sync_target_branch: staging
          
          # Optional: PR type (pr or push)
          sync_type: pr
          
          # Optional: Dry run mode
          dry_run: ${{ inputs.dry_run || false }}
        
        env:
          # Required secrets
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          SHOPIFY_STORE_URL: ${{ secrets.SHOPIFY_STORE_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          # Optional: Slack notifications
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
      # Step 3: Output results (optional)
      - name: Display Results
        if: always()
        run: |
          echo "Sync Status: ${{ steps.sync.outcome }}"
          if [[ "${{ steps.sync.outputs.pull_request_url }}" != "" ]]; then
            echo "Pull Request: ${{ steps.sync.outputs.pull_request_url }}"
          fi
          echo "Files Synced: ${{ steps.sync.outputs.files_count || '0' }}"
          echo "Theme ID: ${{ steps.sync.outputs.theme_id || 'N/A' }}"

# IMPORTANT: What NOT to do
# ❌ DO NOT add custom shell scripts before the action to manage branches
# ❌ DO NOT try to checkout remote_changes branch manually
# ❌ DO NOT use git ls-remote to check for branch existence
# ❌ DO NOT manipulate branches before calling the action
# 
# The action handles ALL git operations internally with proper error handling
