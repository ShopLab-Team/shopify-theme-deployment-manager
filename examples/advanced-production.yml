name: Advanced Production Deployment

on:
  workflow_dispatch:
    inputs:
      version_strategy:
        description: 'Version bump strategy'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      skip_backup:
        description: 'Skip backup creation'
        required: false
        default: false
        type: boolean
      dry_run:
        description: 'Dry run (no actual deployment)'
        required: false
        default: false
        type: boolean

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full history for better change detection
      
      # Cache dependencies for faster builds
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      # Deploy to production
      - name: Deploy theme to production
        id: deploy
        uses: ShopLab-Team/shopify-theme-deployment-manager@v1
        with:
          mode: production
          # Store can be provided as input or use SHOPIFY_STORE_URL secret
          store: ${{ vars.SHOPIFY_STORE }}  # Optional if using SHOPIFY_STORE_URL secret
          dry_run: ${{ inputs.dry_run }}
          
          # Build configuration
          build_enabled: true
          build.node-version: 20
          build.package-manager: npm
          build_command: |
            npm ci --production=false
            npm run build:production
            npm run test:theme
          
          # Backup configuration
          backup_enabled: ${{ !inputs.skip_backup }}
          backup_retention: 10
          backup_prefix: 'PROD_BACKUP_'
          backup_timezone: ${{ vars.TIMEZONE || 'UTC' }}
          
          # Deployment configuration
          deploy_ignore_json_on_prod: true
          deploy_allow_live_push: false
          
          # Versioning configuration
          versioning_enabled: true
          versioning_strategy: ${{ inputs.version_strategy }}
          
          # Push configuration
          push_nodelete: true
          push_extra_ignore: |
            config/settings_data.json
            templates/customers/*.json
        
        env:
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          # SHOPIFY_STORE_URL: ${{ secrets.SHOPIFY_STORE_URL }}  # Alternative to 'store' input
          PRODUCTION_THEME_ID: ${{ secrets.PRODUCTION_THEME_ID }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
      # Create release
      - name: Create GitHub Release
        if: success() && !inputs.dry_run
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.deploy.outputs.version }}
          release_name: Production Release v${{ steps.deploy.outputs.version }}
          body: |
            ## ðŸš€ Production Deployment
            
            - **Theme**: ${{ steps.deploy.outputs.theme_name }}
            - **Version**: ${{ steps.deploy.outputs.version }}
            - **Preview**: ${{ steps.deploy.outputs.preview_url }}
            - **Editor**: ${{ steps.deploy.outputs.editor_url }}
            
            ### Changes
            See [commit history](https://github.com/${{ github.repository }}/compare/v${{ steps.deploy.outputs.previous_version }}...v${{ steps.deploy.outputs.version }})
          draft: false
          prerelease: false
      
      # Additional notifications
      - name: Send deployment metrics
        if: always()
        run: |
          # Send metrics to monitoring service
          curl -X POST https://api.monitoring.com/deployments \
            -H "Authorization: Bearer ${{ secrets.MONITORING_TOKEN }}" \
            -d '{
              "environment": "production",
              "status": "${{ job.status }}",
              "version": "${{ steps.deploy.outputs.version }}",
              "duration": "${{ steps.deploy.outputs.deployment_time }}",
              "theme_id": "${{ steps.deploy.outputs.theme_id }}"
            }'
